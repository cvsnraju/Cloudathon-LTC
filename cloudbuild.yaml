steps:
  # Install OpenTofu CLI and use it for all OpenTofu operations
  - id: install-and-run-tofu
    name: 'alpine'
    entrypoint: sh
    args:
      - '-c'
      - |
        apk add --no-cache wget unzip &&
        wget https://github.com/opentofu/opentofu/releases/download/v1.6.0/tofu_1.6.0_linux_amd64.zip &&
        unzip -j tofu_1.6.0_linux_amd64.zip tofu -d /usr/local/bin/ &&
        chmod +x /usr/local/bin/tofu &&
        tofu init &&
        tofu apply -auto-approve

  # Read duration from env file and sleep for that duration (seconds)
  - id: wait-duration
    name: 'alpine'
    entrypoint: sh
    args:
      - '-c'
      - |
        DURATION=$(grep DURATION duration.env | cut -d '=' -f2) &&
        echo "Sleeping for ${_DURATION} seconds..." &&
        sleep ${_DURATION}

  # Destroy clusters after waiting period ends
  - id: destroy-tofu
    name: 'alpine'
    entrypoint: sh
    args:
      - '-c'
      - |
        apk add --no-cache wget unzip &&
        wget https://github.com/opentofu/opentofu/releases/download/v1.6.0/tofu_1.6.0_linux_amd64.zip &&
        unzip -j tofu_1.6.0_linux_amd64.zip tofu -d /usr/local/bin/ &&
        chmod +x /usr/local/bin/tofu &&
        tofu destroy -auto-approve

logsBucket: 'gs://ltc-hack-prj-19-cloud-build-logs/${BUILD_ID}'

options:
  logging: GCS_ONLY

serviceAccount: 'projects/ltc-hack-prj-19/serviceAccounts/local-resource-creator@ltc-hack-prj-19.iam.gserviceaccount.com'

substitutions:
  _DURATION: "600" # Default value, override via trigger if needed
